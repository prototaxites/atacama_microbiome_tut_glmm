taxonomy[is.na(taxonomy$Family),]$Family <- "Unknown"
## Get ASV posterior means for elevation
ASVmeans <- as.data.frame(apply(model_noPhylo$Sol, 2, mean)) %>%
rownames_to_column("ASV") %>%
filter(grepl("elevation", ASV)) %>%
filter(grepl("ASV", ASV)) %>%
mutate(ASV = sub("elevation_mc.ASV.", "", ASV))
names(ASVmeans) <- c("ASV", "ElevSlope")
taxonomy <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope))
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(na.rm = T, rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation") +
theme_bw() +
theme(legend.position = "none")
?geom_density_ridges
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(na.rm = T, rel_min_height = 0.01, stat = "density") +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(height = ..density.., na.rm = T, rel_min_height = 0.01, stat = "density") +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(aes(height = ..density..), na.rm = T, rel_min_height = 0.01, stat = "density") +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(aes(height = ..density..), na.rm = T, stat = "density") +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(aes(height = ..density..), rel_min_height = 0.01, stat = "density") +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
taxonomy <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota")))
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
taxonomy <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota", "Fibrobacterota", "WPS-2", "Desulfobacterota",
"Deinococcota")))
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
## Read taxonomy data
taxonomy <- qiime2R::read_qza("Data/taxonomy.qza")
taxonomy <- taxonomy$data %>%
separate(Taxon, sep = "; ",
into = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")) %>%
rename(ASV = Feature.ID) %>%
mutate(Phylum = sub("p__", "", Phylum))
taxonomy[is.na(taxonomy$Phylum),]$Phylum <- "Unknown"
taxonomy[is.na(taxonomy$Family),]$Family <- "Unknown"
## Get ASV posterior means for elevation
ASVmeans <- as.data.frame(apply(model_noPhylo$Sol, 2, mean)) %>%
rownames_to_column("ASV") %>%
filter(grepl("elevation", ASV)) %>%
filter(grepl("ASV", ASV)) %>%
mutate(ASV = sub("elevation_mc.ASV.", "", ASV))
names(ASVmeans) <- c("ASV", "ElevSlope")
taxonomy <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota", "Fibrobacterota", "WPS-2", "Desulfobacterota",
"Deinococcota", "MBNT-15")))
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
taxonomy <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota", "Fibrobacterota", "WPS-2", "Desulfobacterota",
"Deinococcota", "MBNT-15", "MBNT15")))
ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy, aes(x = Phylum, y = ElevSlope)) + ggbeeswarm::geom_beeswarm()
ggplot(taxonomy, aes(x = Phylum, y = ElevSlope)) + ggbeeswarm::geom_guasirandom()
ggplot(taxonomy, aes(x = Phylum, y = ElevSlope)) + ggbeeswarm::geom_quasirandom()
ggplot(taxonomy, aes(x = Elevslope, y = Phylum)) + ggbeeswarm::geom_quasirandom()
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom()
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(grouponX=FALSE)
?ggbeeswarm::geom_quasirandom
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(groupOnX=FALSE)
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(aes(colour = Phylum), groupOnX=FALSE)
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(aes(colour = Phylum), groupOnX=FALSE) + theme(legend.position = "none")
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(aes(colour = Phylum), groupOnX=FALSE) + theme(legend.position = "none") + geom_violin(aes(colour = Phylum))
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(aes(colour = Phylum), groupOnX=FALSE, alpha = 0.4, size = 0.1) + theme(legend.position = "none") + geom_violin(aes(colour = Phylum))
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(aes(colour = Phylum), groupOnX=FALSE, alpha = 0.4, size = 0.1) + theme(legend.position = "none") + geom_violin(aes(fill = Phylum))
ggplot(taxonomy, aes(x = ElevSlope, y = Phylum)) + ggbeeswarm::geom_quasirandom(aes(colour = Phylum), groupOnX=FALSE, alpha = 0.4, size = 0.5) + theme(legend.position = "none") + geom_violin(aes(fill = Phylum))
library(tidyverse)
library(qiime2R)
library(MCMCglmm)
glmm_dataset <- read.csv("Data/glmm_dataset.csv")
k <- 1000
## Run a model with phylogeny
mod2 <- MCMCglmm(pres_abs ~ elevation_mc + TotReads,
random = ~ us(1 + elevation_mc):Phylum +
us(1 + elevation_mc):ASV,
family = "categorical",
data = glmm_dataset,
nitt = 200000, burnin = 60000,
prior = list(R=list(V=0.5,fix=1),
G=list(G1=list(V=diag(2),nu=1,alpha.mu=rep(0, 2),alpha.V=diag(2)*k),
G1=list(V=diag(2),nu=1,alpha.mu=rep(0, 2),alpha.V=diag(2)*k))),
thin = 50,
pr = T)
save(mod2, file = "Model_Phylo.Rdata")
summary(mod2)
plot(mod2$VCV)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
load("Models/Model_Phylo.Rdata")
model_Phylo <- mod2; rm(mod2)
as.data.frame(apply(model_Phylo$Sol, 2, mean))
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(ASV = sub("elevation_mc.Phylum.", "", Param))
Phylomeans
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
Phylomeans
names(ASVmeans) <- c("Phylum", "ElevSlope")
names(Phylomeans) <- c("Phylum", "ElevSlope")
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
names(Phylomeans) <- c("Phylum", "ElevSlope")
Phylomeans
## Read taxonomy data
taxonomy <- qiime2R::read_qza("Data/taxonomy.qza")
taxonomy <- taxonomy$data %>%
separate(Taxon, sep = "; ",
into = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")) %>%
rename(ASV = Feature.ID) %>%
mutate(Phylum = sub("p__", "", Phylum))
taxonomy[is.na(taxonomy$Phylum),]$Phylum <- "Unknown"
taxonomy[is.na(taxonomy$Family),]$Family <- "Unknown"
## Get ASV posterior means for elevation
ASVmeans <- as.data.frame(apply(model_noPhylo$Sol, 2, mean)) %>%
rownames_to_column("ASV") %>%
filter(grepl("elevation", ASV)) %>%
filter(grepl("ASV", ASV)) %>%
mutate(ASV = sub("elevation_mc.ASV.", "", ASV))
names(ASVmeans) <- c("ASV", "ElevSlope")
taxonomy2 <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota", "Fibrobacterota", "WPS-2", "Desulfobacterota",
"Deinococcota", "MBNT-15", "MBNT15")))
ggplot(taxonomy2, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
taxonomy3 <- left_join(taxonomy, Phylomeans, ASVmeans)
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
names(Phylomeans) <- c("Phylum", "PhyloSlope")
PASVmeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("ASV") %>%
filter(grepl("elevation_mc.ASV.", Param)) %>%
mutate(Param = sub("elevation_mc.ASV.", "", Param))
names(PASVmeans) <- c("ASV", "ASVSlope")
taxonomy3 <- left_join(taxonomy, Phylomeans) %>% left_join(ASVmeans)
View(taxonomy3)
taxonomy <- taxonomy$data %>%
separate(Taxon, sep = "; ",
into = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")) %>%
rename(ASV = Feature.ID) #%>%
## Read taxonomy data
taxonomy <- qiime2R::read_qza("Data/taxonomy.qza")
taxonomy <- taxonomy$data %>%
separate(Taxon, sep = "; ",
into = c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")) %>%
rename(ASV = Feature.ID) #%>%
# mutate(Phylum = sub("p__", "", Phylum))
taxonomy[is.na(taxonomy$Phylum),]$Phylum <- "Unknown"
taxonomy[is.na(taxonomy$Family),]$Family <- "Unknown"
## Get ASV posterior means for elevation
ASVmeans <- as.data.frame(apply(model_noPhylo$Sol, 2, mean)) %>%
rownames_to_column("ASV") %>%
filter(grepl("elevation", ASV)) %>%
filter(grepl("ASV", ASV)) %>%
mutate(ASV = sub("elevation_mc.ASV.", "", ASV))
names(ASVmeans) <- c("ASV", "ElevSlope")
taxonomy2 <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota", "Fibrobacterota", "WPS-2", "Desulfobacterota",
"Deinococcota", "MBNT-15", "MBNT15")))
ggplot(taxonomy2, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
names(Phylomeans) <- c("Phylum", "PhyloSlope")
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
PASVmeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("ASV") %>%
filter(grepl("elevation_mc.ASV.", Param)) %>%
mutate(Param = sub("elevation_mc.ASV.", "", Param))
names(PASVmeans) <- c("ASV", "ASVSlope")
taxonomy3 <- left_join(taxonomy, Phylomeans) %>% left_join(ASVmeans)
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
names(Phylomeans) <- c("Phylum", "PhyloSlope")
PASVmeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("ASV") %>%
filter(grepl("elevation_mc.ASV.", Param)) %>%
mutate(Param = sub("elevation_mc.ASV.", "", Param))
names(PASVmeans) <- c("ASV", "ASVSlope")
PASVmeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.ASV.", Param)) %>%
mutate(Param = sub("elevation_mc.ASV.", "", Param))
PASVmeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.ASV.", Param)) %>%
mutate(Param = sub("elevation_mc.ASV.", "", Param))
names(PASVmeans) <- c("ASV", "ASVSlope")
taxonomy3 <- left_join(taxonomy, Phylomeans) %>% left_join(PASVmeans)
View(taxonomy3)
ggplot(taxonomy2, aes(y = forcats::fct_reorder(Phylum, PhyloSlope), x = ASVSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy3, aes(y = forcats::fct_reorder(Phylum, PhyloSlope), x = ASVSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy3, aes(y = forcats::fct_reorder(Phylum, PhyloSlope), x = ASVSlope, fill = Phylum)) +
geom_density_ridges(rel_min_height = 0.01) +
geom_vline(xintercept = 0, lty = 2) +
#lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy2, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
#geom_density_ridges(rel_min_height = 0.01) +
geom_boxplot() +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
taxonomy2 <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = mean(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota", "Fibrobacterota", "WPS-2", "Desulfobacterota",
"Deinococcota", "MBNT-15", "MBNT15")))
ggplot(taxonomy2, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_boxplot() +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
taxonomy2 <- left_join(taxonomy, ASVmeans) %>% group_by(Phylum) %>%
mutate(mean = median(ElevSlope)) %>%
filter(!(Phylum %in% c("RCP2-54", "Sumerlaeota", "Fibrobacterota", "WPS-2", "Desulfobacterota",
"Deinococcota", "MBNT-15", "MBNT15")))
ggplot(taxonomy2, aes(y = forcats::fct_reorder(Phylum, mean), x = ElevSlope, fill = Phylum)) +
geom_boxplot() +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(taxonomy2, aes(y = forcats::fct_reorder(Phylum, -mean), x = ElevSlope, fill = Phylum)) +
geom_boxplot() +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
mean_quant <- function(x) c(mean(x), quantile(x, probs = c(0.025, 0.095)))
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean_quant)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
Phylomeans
as.data.frame(apply(model_Phylo$Sol, 2, mean_quant))
a <- as.data.frame(apply(model_Phylo$Sol, 2, mean_quant))
View(a)
a <- as.data.frame(t(apply(model_Phylo$Sol, 2, mean_quant)))
mean_quant <- function(x) c(mean(x), quantile(x, probs = c(0.025, 0.975)))
a <- as.data.frame(t(apply(model_Phylo$Sol, 2, mean_quant)))
Phylomeans <- as.data.frame(apply(model_Phylo$Sol, 2, mean_quant)) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
Phylomeans <- as.data.frame(t(apply(model_Phylo$Sol, 2, mean_quant))) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
View(Phylomeans)
names(Phylomeans) <- c("Phylum", "PhyloSlope", "lci", "uci")
Phylomeans_new <- data.frame()
Phylomeans <- Phylomeans %>% slice(rep(1:n(), times = 100))
View(Phylomeans)
?times
?rep
Phylomeans <- Phylomeans %>% slice(rep(1:n(), times = each))
Phylomeans <- Phylomeans %>% slice(rep(1:n(), each = 100))
View(Phylomeans)
Phylomeans <- Phylomeans %>% slice(rep(1:n(), each = 100)) %>%
mutate(elevation_mc = rep(seq(min(data$elevation_mc), max(data$elevation_mc), length.out = 100),
times = 33))
mean_quant <- function(x) c(mean(x), quantile(x, probs = c(0.025, 0.975)))
Phylomeans <- as.data.frame(t(apply(model_Phylo$Sol, 2, mean_quant))) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
names(Phylomeans) <- c("Phylum", "PhyloSlope", "lci", "uci")
Phylomeans <- Phylomeans %>% slice(rep(1:n(), each = 100)) %>%
mutate(elevation_mc = rep(seq(min(data$elevation_mc), max(data$elevation_mc), length.out = 100),
times = 33))
View(Phylomeans)
table(Phylomeans$Phylum)
summary(model_Phylo)
mean_quant <- function(x) c(mean(x), quantile(x, probs = c(0.025, 0.975)))
Phylomeans <- as.data.frame(t(apply(model_Phylo$Sol, 2, mean_quant))) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
names(Phylomeans) <- c("Phylum", "PhyloSlope", "lci", "uci")
Phylomeans <- Phylomeans %>% slice(rep(1:n(), each = 100)) %>%
mutate(elevation_mc = rep(seq(min(data$elevation_mc), max(data$elevation_mc), length.out = 100),
times = 33),
elevation = (elevation_mc * sd(data$elevation)) + mean(data$elevation),
pred = mean(model_Phylo$Sol[,1]) + ((mean(model_Phylo$Sol[,2]) + Phyloslope) * elevation_mc))
mean_quant <- function(x) c(mean(x), quantile(x, probs = c(0.025, 0.975)))
Phylomeans <- as.data.frame(t(apply(model_Phylo$Sol, 2, mean_quant))) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
names(Phylomeans) <- c("Phylum", "PhyloSlope", "lci", "uci")
Phylomeans <- Phylomeans %>% slice(rep(1:n(), each = 100)) %>%
mutate(elevation_mc = rep(seq(min(data$elevation_mc), max(data$elevation_mc), length.out = 100),
times = 33),
elevation = (elevation_mc * sd(data$elevation)) + mean(data$elevation),
pred = mean(model_Phylo$Sol[,1]) +
((mean(model_Phylo$Sol[,2]) + PhyloSlope) * elevation_mc))
Phylomeans
Phylomeans <- Phylomeans %>% slice(rep(1:n(), each = 100)) %>%
mutate(elevation_mc = rep(seq(min(data$elevation_mc), max(data$elevation_mc), length.out = 100),
times = 33),
elevation = (elevation_mc * sd(data$elevation)) + mean(data$elevation),
pred = mean(model_Phylo$Sol[,1]) +
((mean(model_Phylo$Sol[,2]) + PhyloSlope) * elevation_mc),
pred_lci = mean(model_Phylo$Sol[,1]) +
((mean(model_Phylo$Sol[,2]) + lci) * elevation_mc),
pred_uci = mean(model_Phylo$Sol[,1]) +
((mean(model_Phylo$Sol[,2]) + uci) * elevation_mc))
mean_quant <- function(x) c(mean(x), quantile(x, probs = c(0.025, 0.975)))
Phylomeans <- as.data.frame(t(apply(model_Phylo$Sol, 2, mean_quant))) %>%
rownames_to_column("Param") %>%
filter(grepl("elevation_mc.Phylum.", Param)) %>%
mutate(Param = sub("elevation_mc.Phylum.", "", Param))
names(Phylomeans) <- c("Phylum", "PhyloSlope", "lci", "uci")
Phylomeans <- Phylomeans %>% slice(rep(1:n(), each = 100)) %>%
mutate(elevation_mc = rep(seq(min(data$elevation_mc), max(data$elevation_mc), length.out = 100),
times = 33),
elevation = (elevation_mc * sd(data$elevation)) + mean(data$elevation),
pred = mean(model_Phylo$Sol[,1]) +
((mean(model_Phylo$Sol[,2]) + PhyloSlope) * elevation_mc),
pred_lci = mean(model_Phylo$Sol[,1]) +
((mean(model_Phylo$Sol[,2]) + lci) * elevation_mc),
pred_uci = mean(model_Phylo$Sol[,1]) +
((mean(model_Phylo$Sol[,2]) + uci) * elevation_mc))
View(Phylomeans)
ggplot(Phylomeans, aes(y = plogis(pred), x = elevation)) +
geom_ribbon(aes(ymin = plogis(pred_lci), ymax = plogis(pred_uci), colour = Phylum), alpha = 0.2) +
geom_line(aes(colour = Phylum)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(Phylomeans, aes(y = plogis(pred), x = elevation)) +
geom_ribbon(aes(ymin = plogis(pred_lci), ymax = plogis(pred_uci), fill = Phylum), alpha = 0.2) +
geom_line(aes(colour = Phylum)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(Phylomeans, aes(y = plogis(pred), x = elevation)) +
#geom_ribbon(aes(ymin = plogis(pred_lci), ymax = plogis(pred_uci), fill = Phylum), alpha = 0.2) +
geom_line(aes(colour = Phylum)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
ggplot(Phylomeans, aes(y = plogis(pred), x = elevation)) +
#geom_ribbon(aes(ymin = plogis(pred_lci), ymax = plogis(pred_uci), fill = Phylum), alpha = 0.2) +
geom_line(aes(colour = Phylum)) +
labs(x = "Elevation", y = "Probability of Phylum occurrence") +
theme_bw() +
theme(legend.position = "none")
taxonomy_plot <- ggplot(taxonomy, aes(y = forcats::fct_reorder(Phylum, -mean), x = ElevSlope, fill = Phylum)) +
geom_boxplot() +
geom_vline(xintercept = 0, lty = 2) +
lims(x = c(-0.5, 0.5)) +
labs(x = "Species response to elevation", y = "Phylum") +
theme_bw() +
theme(legend.position = "none")
Plots[[7]]
Plots[[8]]
?moon_reader
list_css()
xaringan::list_css()
xaringan:::list_css()
taxonomy_plot
xaringan:::inf_mr()
xaringan:::inf_mr()
?geom_jitter
?ggbeeswarm::geom_quasirandom
?geom_pointrange
?predict.lm
mtcars$cyl <- as.factor(mtcars$cyl)
newdat <- data.frame(cyl = levels(mtcars$cyl))
predict.lm(mod2, newdata = newdat, interval = "confidence")
predict.lm(mod2, newdata = newdat, interval = "confidence", level = 0.95)
newdat
## Read in data
data <- read_csv("Data/glmm_dataset.csv") %>% rename(PA = pres_abs)
## Load libraries
library(tidyverse)
## For models
library(MCMCglmm)
## For graphing
library(cowplot)
library(ggridges)
library(GGally)
## Read in data
data <- read_csv("Data/glmm_dataset.csv") %>% rename(PA = pres_abs)
load("Models/Model3_noPhylo.Rdata")
model_noPhylo <- mod; rm(mod1)
model_noPhylo <- mod; rm(mod)
summary(model_noPhylo)
plot(model_noPhylo$Sol[,3:7])
plot(model_noPhylo$Sol[,c(3,7)])
plot(model_noPhylo$Sol[,c(2,7)])
plot(model_noPhylo$Sol[,c(7,2)])
load("Models/Model3_noPhylo.Rdata")
model_noPhylo <- mod; rm(mod)
